
--SUBQUERIES----

--SIMPLE SUBQUERY----

SELECT
    *
FROM
    employees
WHERE
    department_id = (
        SELECT
            department_id
        FROM
            departments
        WHERE
            department_name = 'Sales'
    );
    
--Corelated subquery---
SELECT
    *
FROM
    departments;

SELECT
    e.*
FROM
    employees e
WHERE
    salary > (
        SELECT
            AVG(emp.salary)
        FROM
            employees emp
        WHERE
            emp.deparment_id = e.depatment_id
    );

SELECT
    round(avg(salary))
FROM
    employees
WHERE
    department_id = 80;

SELECT
    *
FROM
    employees;


--Singlerow subquery---

SELECT
    *
FROM
    employees
WHERE
    department_id = (
        SELECT
            department_id
        FROM
            departments
        WHERE
            department_name = 'Sales'
    );
    
 --employees who work in sales 
SELECT
    *
FROM
    employees
WHERE
    department_id = 80;
    
    
--    multiple row subquery

SELECT
    *
FROM
    employees
WHERE
    department_id IN (
        SELECT
            department_id
        FROM
            departments
        WHERE
            location_id = 1700
    );
select department_id, from departments
where location_id=1700;


select * from  employees where department_id, in (50,20,30);

---employees who are working in location id 1700

select * from employees where department_id in (select department_id from departments where location_id in 1700);

SELECT
    *
FROM
    employees
      where
            DEPARTMENT_ID IN 
               ( SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN 1700 );
               
select department_id,location_id from departments
where location_id=1700;

select * from employees where department_id in (240,270,260,250);
select * from employees;
select department_id from departments where location_id in 1700;


--Inline subquery

--find the avarage salary for each department  and list the department with their avarage salaries

SELECT
    e.department_id,
    AVG(e.salary)
FROM
    employees e
GROUP BY
    e.department_id;
    
    
SELECT
    d.department_id,
    d.department_name
FROM
    departments d;
    
    
    
--    subquery in select clause


SELECT
    d.department_id,
    department_name,
    subquery.avg_salary
FROM
    departments d,
    join (
        SELECT
            e.department_id,
            AVG(e.salary) avg_salary
        FROM
            employees e
        GROUP BY
            e.department_id)
                subquery ON subquery.department_id = d.department_id;
                
SELECT
    d.department_id,
    d.department_name,
    subquery.avg_salary
FROM
    departments d
JOIN (
    SELECT
        e.department_id,
        AVG(e.salary) AS avg_salary
    FROM
        employees e
    GROUP BY
        e.department_id
) AS subquery
ON subquery.department_id =
d.department_id;

SELECT
    round(avg(salary))
FROM
    employees;



SELECT
    employee_id,
    first_name,
    salary,
    (
        SELECT
            round(avg(salary))
        FROM
            employees
    ) AS avg_sal
FROM
    employees;

SELECT
    e.*,
    (
        SELECT
            round(avg(salary))
        FROM
            employees
    ) avg_sal
FROM
    employees e;
    
--1.Find employees who earn more than their departmentâ€™s average salary


SELECT
    e.employee_id,
    e.first_name,
    e.salary,
    e.department_id
FROM
    employees e
JOIN (
    SELECT
        department_id,
        AVG(salary) AS avg_salary
    FROM
        employees
    GROUP BY
        department_id
) AS dept_avg
ON e.department_id = dept_avg.department_id
WHERE e.salary > dept_avg.avg_salary;

--2.List departments with total salary > 50000

SELECT *
FROM (
    SELECT
        department_id,
        SUM(salary) AS total_salary
    FROM
        employees
    GROUP BY
        department_id
) AS dept_salaries
WHERE total_salary > 50000;


SELECT
    e.employee_id,
    e.first_name,
    (
        SELECT COUNT(*)
        FROM employees e2
        WHERE e2.department_id = e.department_id
    ) AS coworkers
FROM employees e;
